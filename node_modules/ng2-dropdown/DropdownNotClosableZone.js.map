{"version":3,"sources":["../../src/DropdownNotClosableZone.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2C,eAAe,CAAC,CAAA;AAK3D;IAKI,iCAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,0CAAQ,GAAR,UAAS,OAAoB;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,KAAK,KAAK,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC;QAEjB,IAAM,WAAW,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAC/D,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAZD;QAAC,YAAK,CAAC,4BAA4B,CAAC;;6EAAA;IALxC;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,8BAA8B;SAC3C,CAAC;;+BAAA;IAgBF,8BAAC;AAAD,CAfA,AAeC,IAAA;AAfY,+BAAuB,0BAenC,CAAA","file":"DropdownNotClosableZone.js","sourcesContent":["import {Directive, ElementRef, Input} from \"@angular/core\";\n\n@Directive({\n    selector: \"[dropdown-not-closable-zone]\"\n})\nexport class DropdownNotClosableZone {\n    \n    @Input(\"dropdown-not-closable-zone\")\n    dropdownNotClosabledZone: boolean;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    contains(element: HTMLElement) {\n        if (this.dropdownNotClosabledZone === false)\n            return false;\n        \n        const thisElement: HTMLElement = this.elementRef.nativeElement;\n        return thisElement.contains(element);\n    }\n}"],"sourceRoot":""}